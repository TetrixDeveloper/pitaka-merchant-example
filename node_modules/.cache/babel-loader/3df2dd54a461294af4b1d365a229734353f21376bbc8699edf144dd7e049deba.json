{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { setAuthToken } from \"graphQLClient\";\nimport { fetchCurrentUserDetails, fetchCurrentUserWalletAccounts } from \"./services\";\nimport { authKeys } from \"./keys\";\nexport const useGetTokensQuery = () => {\n  _s();\n  const {\n    getAccessTokenSilently,\n    isAuthenticated\n  } = useAuth0();\n  const getTokens = async () => {\n    const tokens = await getAccessTokenSilently({\n      detailedResponse: true\n    });\n    setAuthToken(tokens.id_token);\n    return tokens;\n  };\n  return useQuery({\n    queryKey: authKeys.getTokens(),\n    queryFn: () => getTokens(),\n    enabled: !!isAuthenticated\n  });\n};\n_s(useGetTokensQuery, \"G8IBOLNNBHXj+/y63Dp9hI2YZsg=\", false, function () {\n  return [useAuth0, useQuery];\n});\nexport const useGetCurrentUserDetailsQuery = () => {\n  _s2();\n  const {\n    data: tokenData\n  } = useGetTokensQuery();\n  const getUserDetails = async () => {\n    return await fetchCurrentUserDetails();\n  };\n  return useQuery({\n    queryKey: authKeys.getCurrentUser(),\n    queryFn: () => getUserDetails(),\n    enabled: Boolean(tokenData)\n  });\n};\n_s2(useGetCurrentUserDetailsQuery, \"AK6VMwECvG5UORhyw3asAV8LcKE=\", false, function () {\n  return [useGetTokensQuery, useQuery];\n});\nexport const useGetCurrentUserWalletAccounts = () => {\n  _s3();\n  return useQuery({\n    queryKey: authKeys.getCurrentUserWalletAccounts(),\n    queryFn: () => fetchCurrentUserWalletAccounts()\n  });\n};\n_s3(useGetCurrentUserWalletAccounts, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","useAuth0","setAuthToken","fetchCurrentUserDetails","fetchCurrentUserWalletAccounts","authKeys","useGetTokensQuery","_s","getAccessTokenSilently","isAuthenticated","getTokens","tokens","detailedResponse","id_token","queryKey","queryFn","enabled","useGetCurrentUserDetailsQuery","_s2","data","tokenData","getUserDetails","getCurrentUser","Boolean","useGetCurrentUserWalletAccounts","_s3","getCurrentUserWalletAccounts"],"sources":["C:/Users/iandev/Documents/GitHub/pitaka-merchant-example/src/features/auth/queries.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport { setAuthToken } from \"graphQLClient\";\r\nimport {\r\n  fetchCurrentUserDetails,\r\n  fetchCurrentUserWalletAccounts,\r\n} from \"./services\";\r\nimport { authKeys } from \"./keys\";\r\n\r\nexport const useGetTokensQuery = () => {\r\n  const { getAccessTokenSilently, isAuthenticated } = useAuth0();\r\n\r\n  const getTokens = async () => {\r\n    const tokens = await getAccessTokenSilently({ detailedResponse: true });\r\n    setAuthToken(tokens.id_token);\r\n    return tokens;\r\n  };\r\n  return useQuery({\r\n    queryKey: authKeys.getTokens(),\r\n    queryFn: () => getTokens(),\r\n    enabled: !!isAuthenticated,\r\n  });\r\n};\r\n\r\nexport const useGetCurrentUserDetailsQuery = () => {\r\n  const { data: tokenData } = useGetTokensQuery();\r\n  const getUserDetails = async () => {\r\n    return await fetchCurrentUserDetails();\r\n  };\r\n\r\n  return useQuery({\r\n    queryKey: authKeys.getCurrentUser(),\r\n    queryFn: () => getUserDetails(),\r\n    enabled: Boolean(tokenData),\r\n  });\r\n};\r\n\r\nexport const useGetCurrentUserWalletAccounts = () => {\r\n  return useQuery({\r\n    queryKey: authKeys.getCurrentUserWalletAccounts(),\r\n    queryFn: () => fetchCurrentUserWalletAccounts(),\r\n  });\r\n};\r\n"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,SAASC,YAAY,QAAQ,eAAe;AAC5C,SACEC,uBAAuB,EACvBC,8BAA8B,QACzB,YAAY;AACnB,SAASC,QAAQ,QAAQ,QAAQ;AAEjC,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC,sBAAsB;IAAEC;EAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAE9D,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,MAAM,GAAG,MAAMH,sBAAsB,CAAC;MAAEI,gBAAgB,EAAE;IAAK,CAAC,CAAC;IACvEV,YAAY,CAACS,MAAM,CAACE,QAAQ,CAAC;IAC7B,OAAOF,MAAM;EACf,CAAC;EACD,OAAOX,QAAQ,CAAC;IACdc,QAAQ,EAAET,QAAQ,CAACK,SAAS,CAAC,CAAC;IAC9BK,OAAO,EAAEA,CAAA,KAAML,SAAS,CAAC,CAAC;IAC1BM,OAAO,EAAE,CAAC,CAACP;EACb,CAAC,CAAC;AACJ,CAAC;AAACF,EAAA,CAbWD,iBAAiB;EAAA,QACwBL,QAAQ,EAOrDD,QAAQ;AAAA;AAOjB,OAAO,MAAMiB,6BAA6B,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjD,MAAM;IAAEC,IAAI,EAAEC;EAAU,CAAC,GAAGd,iBAAiB,CAAC,CAAC;EAC/C,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,OAAO,MAAMlB,uBAAuB,CAAC,CAAC;EACxC,CAAC;EAED,OAAOH,QAAQ,CAAC;IACdc,QAAQ,EAAET,QAAQ,CAACiB,cAAc,CAAC,CAAC;IACnCP,OAAO,EAAEA,CAAA,KAAMM,cAAc,CAAC,CAAC;IAC/BL,OAAO,EAAEO,OAAO,CAACH,SAAS;EAC5B,CAAC,CAAC;AACJ,CAAC;AAACF,GAAA,CAXWD,6BAA6B;EAAA,QACZX,iBAAiB,EAKtCN,QAAQ;AAAA;AAOjB,OAAO,MAAMwB,+BAA+B,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnD,OAAOzB,QAAQ,CAAC;IACdc,QAAQ,EAAET,QAAQ,CAACqB,4BAA4B,CAAC,CAAC;IACjDX,OAAO,EAAEA,CAAA,KAAMX,8BAA8B,CAAC;EAChD,CAAC,CAAC;AACJ,CAAC;AAACqB,GAAA,CALWD,+BAA+B;EAAA,QACnCxB,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}