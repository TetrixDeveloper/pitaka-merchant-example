{"ast":null,"code":"import graphQLClient from \"graphQLClient\";\nimport { graphql } from \"__generated__/gql\";\nconst requestExpressSendDocument = graphql(`\n  mutation RequestExpressSend($data: RequestExpressSendInput!) {\n    currentUser {\n      requestExpressSend(data: $data) {\n        transaction {\n          id\n          sentAmount\n          availableBalance\n          createdAt\n        }\n      }\n    }\n  }\n`);\nconst clearPaymentIntentDocument = graphql(`\n  mutation ClearPaymentIntent($data: ClearPaymentIntentInput!) {\n    currentUser {\n      clearPaymentIntent(data: $data) {\n        id\n        amount\n        fee\n        status\n        returnUrl\n      }\n    }\n  }\n`);\nconst fetchPaymentIntentDocument = graphql(`\n  query FetchPaymentIntent($paymentIntentId: String!) {\n    currentUser {\n      fetchPaymentIntent(paymentIntentId: $paymentIntentId) {\n        id\n        organizationId\n        requestedAmount\n        totalFees\n        description\n        statementDescriptor\n        returnUrl\n        createdAt\n        status\n      }\n    }\n  }\n`);\nexport const requestExpressSend = async data => {\n  const result = await graphQLClient.request(requestExpressSendDocument, {\n    data\n  });\n  return result.currentUser.requestExpressSend;\n};\nexport const clearPaymentIntent = async data => {\n  const result = await graphQLClient.request(clearPaymentIntentDocument, {\n    data\n  });\n  return result.currentUser.clearPaymentIntent;\n};\nexport const fetchPaymentIntent = async paymentIntentId => {\n  const result = await graphQLClient.request(fetchPaymentIntentDocument, {\n    paymentIntentId\n  });\n  return result.currentUser.fetchPaymentIntent;\n};","map":{"version":3,"names":["graphQLClient","graphql","requestExpressSendDocument","clearPaymentIntentDocument","fetchPaymentIntentDocument","requestExpressSend","data","result","request","currentUser","clearPaymentIntent","fetchPaymentIntent","paymentIntentId"],"sources":["C:/Users/iandev/Documents/GitHub/pitaka-merchant-example/src/features/merchant/services.ts"],"sourcesContent":["import graphQLClient from \"graphQLClient\";\r\n\r\nimport { graphql } from \"__generated__/gql\";\r\nimport {\r\n  ClearPaymentIntentInput,\r\n  RequestExpressSendInput,\r\n} from \"__generated__/gql/graphql\";\r\n\r\nconst requestExpressSendDocument = graphql(`\r\n  mutation RequestExpressSend($data: RequestExpressSendInput!) {\r\n    currentUser {\r\n      requestExpressSend(data: $data) {\r\n        transaction {\r\n          id\r\n          sentAmount\r\n          availableBalance\r\n          createdAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`);\r\n\r\nconst clearPaymentIntentDocument = graphql(`\r\n  mutation ClearPaymentIntent($data: ClearPaymentIntentInput!) {\r\n    currentUser {\r\n      clearPaymentIntent(data: $data) {\r\n        id\r\n        amount\r\n        fee\r\n        status\r\n        returnUrl\r\n      }\r\n    }\r\n  }\r\n`);\r\n\r\nconst fetchPaymentIntentDocument = graphql(`\r\n  query FetchPaymentIntent($paymentIntentId: String!) {\r\n    currentUser {\r\n      fetchPaymentIntent(paymentIntentId: $paymentIntentId) {\r\n        id\r\n        organizationId\r\n        requestedAmount\r\n        totalFees\r\n        description\r\n        statementDescriptor\r\n        returnUrl\r\n        createdAt\r\n        status\r\n      }\r\n    }\r\n  }\r\n`);\r\n\r\nexport const requestExpressSend = async (data: RequestExpressSendInput) => {\r\n  const result = await graphQLClient.request(requestExpressSendDocument, {\r\n    data,\r\n  });\r\n\r\n  return result.currentUser.requestExpressSend;\r\n};\r\n\r\nexport const clearPaymentIntent = async (data: ClearPaymentIntentInput) => {\r\n  const result = await graphQLClient.request(clearPaymentIntentDocument, {\r\n    data,\r\n  });\r\n\r\n  return result.currentUser.clearPaymentIntent;\r\n};\r\n\r\nexport const fetchPaymentIntent = async (paymentIntentId: string) => {\r\n  const result = await graphQLClient.request(fetchPaymentIntentDocument, {\r\n    paymentIntentId,\r\n  });\r\n\r\n  return result.currentUser.fetchPaymentIntent;\r\n};\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,eAAe;AAEzC,SAASC,OAAO,QAAQ,mBAAmB;AAM3C,MAAMC,0BAA0B,GAAGD,OAAO,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AAEF,MAAME,0BAA0B,GAAGF,OAAO,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AAEF,MAAMG,0BAA0B,GAAGH,OAAO,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AAEF,OAAO,MAAMI,kBAAkB,GAAG,MAAOC,IAA6B,IAAK;EACzE,MAAMC,MAAM,GAAG,MAAMP,aAAa,CAACQ,OAAO,CAACN,0BAA0B,EAAE;IACrEI;EACF,CAAC,CAAC;EAEF,OAAOC,MAAM,CAACE,WAAW,CAACJ,kBAAkB;AAC9C,CAAC;AAED,OAAO,MAAMK,kBAAkB,GAAG,MAAOJ,IAA6B,IAAK;EACzE,MAAMC,MAAM,GAAG,MAAMP,aAAa,CAACQ,OAAO,CAACL,0BAA0B,EAAE;IACrEG;EACF,CAAC,CAAC;EAEF,OAAOC,MAAM,CAACE,WAAW,CAACC,kBAAkB;AAC9C,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,eAAuB,IAAK;EACnE,MAAML,MAAM,GAAG,MAAMP,aAAa,CAACQ,OAAO,CAACJ,0BAA0B,EAAE;IACrEQ;EACF,CAAC,CAAC;EAEF,OAAOL,MAAM,CAACE,WAAW,CAACE,kBAAkB;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}