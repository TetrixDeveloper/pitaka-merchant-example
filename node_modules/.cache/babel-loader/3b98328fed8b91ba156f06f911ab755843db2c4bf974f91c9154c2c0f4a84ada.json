{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iandev\\\\Documents\\\\GitHub\\\\pitaka-merchant-example\\\\src\\\\features\\\\merchant\\\\PayMerchant.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Button, Stack, Typography } from \"@mui/material\";\nimport { useGetCurrentUserWalletAccounts } from \"features/auth/queries\";\nimport { CURRENCY, formatCurrencyAmount } from \"features/utils\";\nimport { useClearPaymentIntentMutation } from \"./mutations\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getFetchPaymentIntentQuery } from \"./queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TRANSACTION_FEE_PERCENT = Number(process.env.REACT_APP_TRANSACTION_FEE_PERCENT);\nconst TRANSACTION_FEE_MIN = Number(process.env.REACT_APP_TRANSACTION_FEE_MIN);\nfunction PayMerchant() {\n  _s();\n  const [product, setProduct] = useState(null);\n  const [callbackUrl, setCallbackUrl] = useState(\"\");\n  const [amountToPay, setAmountToPay] = useState(0);\n  const [transactionFee, setTransactionFee] = useState(TRANSACTION_FEE_MIN);\n  useEffect(() => {\n    const savedUrl = localStorage.getItem('productUrl');\n    if (savedUrl) {\n      const url = new URL(savedUrl);\n      const searchParams = new URLSearchParams(url.search);\n      const idParam = searchParams.get('id');\n      const callbackParam = searchParams.get('callback_url');\n      const amountParam = searchParams.get('amount');\n      const productParam = searchParams.get('product');\n      if (amountParam) {\n        setCallbackUrl(callbackParam !== null && callbackParam !== void 0 ? callbackParam : '');\n        setProduct(productParam);\n        const fee = calculateFee(Number(amountParam));\n        setTransactionFee(fee);\n        setAmountToPay(Number(amountParam));\n      }\n    }\n  }, []);\n  const {\n    data: walletAccounts\n  } = useGetCurrentUserWalletAccounts();\n  const {\n    mutateAsync,\n    isPending\n  } = useClearPaymentIntentMutation();\n  const paymentIntentId = idParam;\n  const {\n    data: paymentIntent\n  } = useQuery(getFetchPaymentIntentQuery(paymentIntentId));\n  const calculateFee = amount => {\n    const calculatedFee = amount * TRANSACTION_FEE_PERCENT;\n    return Math.max(calculatedFee, TRANSACTION_FEE_MIN);\n  };\n  const handlePayment = async () => {\n    var _walletAccounts$;\n    if (paymentIntent && walletAccounts !== null && walletAccounts !== void 0 && (_walletAccounts$ = walletAccounts[0]) !== null && _walletAccounts$ !== void 0 && _walletAccounts$.accountNumber) {\n      try {\n        await mutateAsync({\n          amount: amountToPay,\n          senderAccountNumber: walletAccounts[0].accountNumber,\n          paymentIntentId: paymentIntent.id\n        });\n        alert(\"Success!\");\n        setAmountToPay(0);\n        window.location.href = callbackUrl;\n      } catch (error) {\n        alert(\"Error processing your transaction\");\n      }\n    }\n  };\n  console.log('walletsAccount', walletAccounts);\n  console.log(process.env.REACT_APP_DTAKA_TEMP_WALLET_ACCOUNT);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      flexDirection: \"row\",\n      mt: \"1em\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Merchant: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"#6b7280\",\n        pl: 1,\n        children: \"DWallet Technologies Inc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      flexDirection: \"row\",\n      mt: \"1em\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Order:\", product, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      flexDirection: \"row\",\n      mt: \"1em\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Fee: \", transactionFee]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      flexDirection: \"row\",\n      mt: \"1em\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Total Amount:\", formatCurrencyAmount(amountToPay, CURRENCY.PHP), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handlePayment,\n      size: \"large\",\n      sx: {\n        marginTop: 2\n      },\n      disabled: !walletAccounts || isPending,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(PayMerchant, \"yFQl29gqpLbTfLU3/AeC1s8Ak8k=\", false, function () {\n  return [useGetCurrentUserWalletAccounts, useClearPaymentIntentMutation, useQuery];\n});\n_c = PayMerchant;\nexport default PayMerchant;\nvar _c;\n$RefreshReg$(_c, \"PayMerchant\");","map":{"version":3,"names":["useEffect","useState","Button","Stack","Typography","useGetCurrentUserWalletAccounts","CURRENCY","formatCurrencyAmount","useClearPaymentIntentMutation","useQuery","getFetchPaymentIntentQuery","jsxDEV","_jsxDEV","TRANSACTION_FEE_PERCENT","Number","process","env","REACT_APP_TRANSACTION_FEE_PERCENT","TRANSACTION_FEE_MIN","REACT_APP_TRANSACTION_FEE_MIN","PayMerchant","_s","product","setProduct","callbackUrl","setCallbackUrl","amountToPay","setAmountToPay","transactionFee","setTransactionFee","savedUrl","localStorage","getItem","url","URL","searchParams","URLSearchParams","search","idParam","get","callbackParam","amountParam","productParam","fee","calculateFee","data","walletAccounts","mutateAsync","isPending","paymentIntentId","paymentIntent","amount","calculatedFee","Math","max","handlePayment","_walletAccounts$","accountNumber","senderAccountNumber","id","alert","window","location","href","error","console","log","REACT_APP_DTAKA_TEMP_WALLET_ACCOUNT","spacing","children","flexDirection","mt","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","pl","PHP","onClick","size","sx","marginTop","disabled","_c","$RefreshReg$"],"sources":["C:/Users/iandev/Documents/GitHub/pitaka-merchant-example/src/features/merchant/PayMerchant.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Button, Grid2, Stack, TextField, Typography } from \"@mui/material\";\r\n\r\nimport { useGetCurrentUserWalletAccounts } from \"features/auth/queries\";\r\nimport { CURRENCY, formatCurrencyAmount } from \"features/utils\";\r\nimport { useClearPaymentIntentMutation } from \"./mutations\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getFetchPaymentIntentQuery } from \"./queries\";\r\n\r\nconst TRANSACTION_FEE_PERCENT = Number(\r\n  process.env.REACT_APP_TRANSACTION_FEE_PERCENT\r\n);\r\nconst TRANSACTION_FEE_MIN = Number(process.env.REACT_APP_TRANSACTION_FEE_MIN);\r\n\r\nfunction PayMerchant() {\r\n\r\n\r\n  const [product, setProduct] = useState<string | null>(null);\r\n  const [callbackUrl, setCallbackUrl] = useState(\"\");\r\n  const [amountToPay, setAmountToPay] = useState(0);\r\n  const [transactionFee, setTransactionFee] = useState(TRANSACTION_FEE_MIN);\r\n  \r\n  useEffect(() => {\r\n\r\n    const savedUrl = localStorage.getItem('productUrl');\r\n\r\n    if (savedUrl) \r\n    {\r\n    \r\n      const url = new URL(savedUrl);\r\n      const searchParams = new URLSearchParams(url.search);\r\n      const idParam = searchParams.get('id');\r\n      const callbackParam = searchParams.get('callback_url');\r\n      const amountParam = searchParams.get('amount');\r\n      const productParam = searchParams.get('product');\r\n      if (amountParam) \r\n      {\r\n        setCallbackUrl(callbackParam ?? '');\r\n        setProduct(productParam);\r\n        const fee = calculateFee(Number(amountParam));\r\n        setTransactionFee(fee);\r\n        setAmountToPay(Number(amountParam));\r\n      }\r\n    }\r\n    \r\n    \r\n  }, []);\r\n\r\n\r\n\r\n  const { data: walletAccounts } = useGetCurrentUserWalletAccounts();\r\n  const { mutateAsync, isPending } = useClearPaymentIntentMutation();\r\n\r\n  const paymentIntentId = idParam;\r\n  const { data: paymentIntent } = useQuery(\r\n    getFetchPaymentIntentQuery(paymentIntentId)\r\n  );\r\n\r\n\r\n  const calculateFee = (amount: number) => {\r\n    const calculatedFee = amount * TRANSACTION_FEE_PERCENT;\r\n    return Math.max(calculatedFee, TRANSACTION_FEE_MIN);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handlePayment = async () => {\r\n    if (paymentIntent && walletAccounts?.[0]?.accountNumber) {\r\n      try {\r\n        await mutateAsync({\r\n          amount: amountToPay,\r\n          senderAccountNumber: walletAccounts[0].accountNumber,\r\n          paymentIntentId: paymentIntent.id,\r\n        });\r\n        alert(\"Success!\");\r\n        setAmountToPay(0);\r\n        window.location.href=callbackUrl;\r\n      } catch (error) {\r\n        alert(\"Error processing your transaction\");\r\n      }\r\n    }\r\n  };\r\n\r\n  console.log('walletsAccount', walletAccounts);\r\n  console.log(process.env.REACT_APP_DTAKA_TEMP_WALLET_ACCOUNT);\r\n\r\n  return (\r\n    <Stack spacing={2}>\r\n      <Stack flexDirection=\"row\" mt=\"1em\">\r\n        <Typography variant=\"h5\">Merchant: </Typography>\r\n        <Typography variant=\"h5\" color=\"#6b7280\" pl={1}>\r\n          DWallet Technologies Inc.\r\n        </Typography>\r\n      </Stack>\r\n      <Stack flexDirection=\"row\" mt=\"1em\">\r\n      <Typography variant=\"h5\">Order:{product} </Typography>\r\n      </Stack>\r\n      \r\n       \r\n\r\n\r\n      <Stack flexDirection=\"row\" mt=\"1em\">\r\n        <Typography variant=\"h5\">\r\n          Fee: {transactionFee}\r\n        </Typography>\r\n      </Stack>\r\n\r\n      <Stack flexDirection=\"row\" mt=\"1em\">\r\n    <Typography variant=\"h5\">Total Amount:{formatCurrencyAmount(amountToPay, CURRENCY.PHP)} </Typography>\r\n      </Stack>\r\n      \r\n      \r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handlePayment}\r\n        size=\"large\"\r\n        sx={{ marginTop: 2 }}\r\n        disabled={!walletAccounts || isPending}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default PayMerchant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}