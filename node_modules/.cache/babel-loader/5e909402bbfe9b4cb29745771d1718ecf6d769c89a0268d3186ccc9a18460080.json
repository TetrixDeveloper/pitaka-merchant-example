{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iandev\\\\Documents\\\\GitHub\\\\pitaka-merchant-example\\\\src\\\\features\\\\auth\\\\PinInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Typography, Card, CardContent } from '@mui/material';\nimport { useVerifyPinMutation } from './mutations';\nimport { useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PinInput() {\n  _s();\n  const {\n    mutateAsync\n  } = useVerifyPinMutation();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [pin, setPin] = useState(new Array(6).fill(''));\n  const handleClick = async pinString => {\n    try {\n      await mutateAsync(pinString);\n      window.location.reload();\n    } catch (error) {\n      enqueueSnackbar(`Wrong Pin!: ${error}`, {\n        variant: 'error'\n      });\n    }\n  };\n  const handleInput = e => {\n    const value = e.target.value;\n    if (value.length <= 6 && /^[0-9]*$/.test(value)) {\n      const newPin = value.split('');\n      setPin([...newPin, ...new Array(6 - newPin.length).fill('')]);\n      if (value.length === 6) {\n        handleClick(value);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      backgroundColor: '#0f1e33',\n      padding: 2,\n      border: '3px solid #0f1e33',\n      borderRadius: '8px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 400,\n        backgroundColor: '#e8f1fa',\n        padding: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          mb: 2,\n          children: \"Enter Pin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          gap: 2,\n          mt: 2,\n          mb: 4,\n          justifyContent: \"center\",\n          position: \"relative\",\n          sx: {\n            backgroundColor: 'transparent',\n            border: 'none',\n            boxShadow: 'none'\n          },\n          children: [pin.map((digit, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '20px',\n              height: '20px',\n              borderRadius: '50%',\n              backgroundColor: digit ? '#34466F' : '#ddd',\n              border: '1px solid #ccc'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n            value: pin.join(''),\n            onChange: handleInput,\n            type: \"password\",\n            variant: \"outlined\",\n            size: \"small\",\n            fullWidth: true,\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              opacity: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(PinInput, \"xVfQxUTDl8uA3JFDRJAeUJ7TF0U=\", false, function () {\n  return [useVerifyPinMutation, useSnackbar];\n});\n_c = PinInput;\nexport default _c2 = /*#__PURE__*/React.memo(PinInput);\nvar _c, _c2;\n$RefreshReg$(_c, \"PinInput\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","Box","TextField","Typography","Card","CardContent","useVerifyPinMutation","useSnackbar","jsxDEV","_jsxDEV","PinInput","_s","mutateAsync","enqueueSnackbar","pin","setPin","Array","fill","handleClick","pinString","window","location","reload","error","variant","handleInput","e","value","target","length","test","newPin","split","sx","display","justifyContent","alignItems","minHeight","backgroundColor","padding","border","borderRadius","children","maxWidth","mb","fileName","_jsxFileName","lineNumber","columnNumber","gap","mt","position","boxShadow","map","digit","index","width","height","join","onChange","type","size","fullWidth","style","top","left","opacity","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/iandev/Documents/GitHub/pitaka-merchant-example/src/features/auth/PinInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, TextField, Typography, Card, CardContent } from '@mui/material';\nimport { useVerifyPinMutation } from './mutations';\nimport { useSnackbar } from 'notistack';\n\nfunction PinInput() {\n  const { mutateAsync } = useVerifyPinMutation();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [pin, setPin] = useState(new Array(6).fill(''));\n\n  const handleClick = async (pinString: string) => {\n    try {\n      await mutateAsync(pinString);\n      window.location.reload();\n    } catch (error) {\n      enqueueSnackbar(`Wrong Pin!: ${error}`, {\n        variant: 'error',\n      });\n    }\n  };\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    if (value.length <= 6 && /^[0-9]*$/.test(value)) {\n      const newPin = value.split('');\n      setPin([...newPin, ...new Array(6 - newPin.length).fill('')]);\n\n      if (value.length === 6) {\n        handleClick(value);\n      }\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh',\n        backgroundColor: '#0f1e33',\n        padding: 2,\n        border: '3px solid #0f1e33',\n        borderRadius: '8px',\n      }}\n    >\n      <Card sx={{ maxWidth: 400, backgroundColor: '#e8f1fa', padding: 5 }}>\n        <CardContent>\n          <Typography variant=\"h6\" mb={2}>\n            Enter Pin\n          </Typography>\n          <Box\n            display=\"flex\"\n            gap={2}\n            mt={2}\n            mb={4}\n            justifyContent=\"center\"\n            position=\"relative\"\n            sx={{\n              backgroundColor: 'transparent',\n              border: 'none',\n              boxShadow: 'none',\n            }}\n          >\n            {pin.map((digit, index) => (\n              <Box\n                key={index}\n                sx={{\n                  width: '20px',\n                  height: '20px',\n                  borderRadius: '50%',\n                  backgroundColor: digit ? '#34466F' : '#ddd',\n                  border: '1px solid #ccc',\n                }}\n              />\n            ))}\n\n            <TextField\n              value={pin.join('')}\n              onChange={handleInput}\n              type=\"password\"\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                opacity: 0,\n              }}\n            />\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n}\n\nexport default React.memo(PinInput);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}