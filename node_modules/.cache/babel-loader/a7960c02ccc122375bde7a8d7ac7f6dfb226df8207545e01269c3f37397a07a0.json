{"ast":null,"code":"var _s = $RefreshSig$();\nimport { fetchPaymentIntent } from './services';\nimport { useSelector } from 'react-redux';\nimport { getWalletSelector } from '@state/Wallet/selectors';\nimport { getCurrency } from '@state/Preference/selector';\nexport const paymentIntentKeys = {\n  all: ['paymentIntents'],\n  paymentIntent: () => [...paymentIntentKeys.all, 'paymentIntent']\n};\nexport const getFetchPaymentIntentQuery = paymentIntentId => ({\n  queryKey: paymentIntentKeys.paymentIntent(),\n  queryFn: () => fetchPaymentIntent(paymentIntentId)\n});\nexport const useWalletsAccumulatedTotalBalanceQuery = () => {\n  _s();\n  const {\n    wallets\n  } = useSelector(getWalletSelector());\n  const currency = useSelector(getCurrency);\n  const walletsList = Object.values(wallets);\n  const computeAccumulatedBalance = () => {\n    return walletsList.reduce((total, {\n      address\n    }) => {\n      const walletBalance = queryClient.getQueryData([...walletKeys.wallet(address), 'total']);\n      if (typeof walletBalance !== 'number') {\n        return 0;\n      }\n      return total + walletBalance;\n    }, 0);\n  };\n  return useQuery({\n    queryKey: walletKeys.walletsAccumulatedTotalBalance(walletsList.map(wallet => wallet.address), currency),\n    queryFn: computeAccumulatedBalance\n  });\n};\n_s(useWalletsAccumulatedTotalBalanceQuery, \"xE7Ooom/d+Ncy9hBndk5kAS/Fk0=\", true, function () {\n  return [useSelector, useSelector];\n});","map":{"version":3,"names":["fetchPaymentIntent","useSelector","getWalletSelector","getCurrency","paymentIntentKeys","all","paymentIntent","getFetchPaymentIntentQuery","paymentIntentId","queryKey","queryFn","useWalletsAccumulatedTotalBalanceQuery","_s","wallets","currency","walletsList","Object","values","computeAccumulatedBalance","reduce","total","address","walletBalance","queryClient","getQueryData","walletKeys","wallet","useQuery","walletsAccumulatedTotalBalance","map"],"sources":["C:/Users/iandev/Documents/GitHub/pitaka-merchant-example/src/features/merchant/queries.ts"],"sourcesContent":["import { fetchPaymentIntent } from './services';\nimport { useSelector } from 'react-redux';\nimport {getWalletSelector} from '@state/Wallet/selectors';\nimport { getCurrency } from '@state/Preference/selector';\n\nexport const paymentIntentKeys = {\n  all: ['paymentIntents'] as const,\n  paymentIntent: () => [...paymentIntentKeys.all, 'paymentIntent'] as const,\n};\n\nexport const getFetchPaymentIntentQuery = (paymentIntentId: string) => ({\n  queryKey: paymentIntentKeys.paymentIntent(),\n  queryFn: () => fetchPaymentIntent(paymentIntentId),\n});\n\n\nexport const useWalletsAccumulatedTotalBalanceQuery = () => {\n  const { wallets } = useSelector(getWalletSelector());\n  const currency = useSelector(getCurrency);\n  const walletsList = Object.values(wallets);\n\n  const computeAccumulatedBalance = () => {\n    return walletsList.reduce((total, { address }) => {\n      const walletBalance = queryClient.getQueryData([\n        ...walletKeys.wallet(address),\n        'total',\n      ]);\n      if (typeof walletBalance !== 'number') {\n        return 0;\n      }\n      return total + walletBalance;\n    }, 0);\n  };\n\n  return useQuery({\n    queryKey: walletKeys.walletsAccumulatedTotalBalance(\n      walletsList.map(wallet => wallet.address),\n      currency,\n    ),\n    queryFn: computeAccumulatedBalance,\n  });\n};"],"mappings":";AAAA,SAASA,kBAAkB,QAAQ,YAAY;AAC/C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,iBAAiB,QAAO,yBAAyB;AACzD,SAASC,WAAW,QAAQ,4BAA4B;AAExD,OAAO,MAAMC,iBAAiB,GAAG;EAC/BC,GAAG,EAAE,CAAC,gBAAgB,CAAU;EAChCC,aAAa,EAAEA,CAAA,KAAM,CAAC,GAAGF,iBAAiB,CAACC,GAAG,EAAE,eAAe;AACjE,CAAC;AAED,OAAO,MAAME,0BAA0B,GAAIC,eAAuB,KAAM;EACtEC,QAAQ,EAAEL,iBAAiB,CAACE,aAAa,CAAC,CAAC;EAC3CI,OAAO,EAAEA,CAAA,KAAMV,kBAAkB,CAACQ,eAAe;AACnD,CAAC,CAAC;AAGF,OAAO,MAAMG,sCAAsC,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1D,MAAM;IAAEC;EAAQ,CAAC,GAAGZ,WAAW,CAACC,iBAAiB,CAAC,CAAC,CAAC;EACpD,MAAMY,QAAQ,GAAGb,WAAW,CAACE,WAAW,CAAC;EACzC,MAAMY,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACJ,OAAO,CAAC;EAE1C,MAAMK,yBAAyB,GAAGA,CAAA,KAAM;IACtC,OAAOH,WAAW,CAACI,MAAM,CAAC,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MAChD,MAAMC,aAAa,GAAGC,WAAW,CAACC,YAAY,CAAC,CAC7C,GAAGC,UAAU,CAACC,MAAM,CAACL,OAAO,CAAC,EAC7B,OAAO,CACR,CAAC;MACF,IAAI,OAAOC,aAAa,KAAK,QAAQ,EAAE;QACrC,OAAO,CAAC;MACV;MACA,OAAOF,KAAK,GAAGE,aAAa;IAC9B,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,OAAOK,QAAQ,CAAC;IACdlB,QAAQ,EAAEgB,UAAU,CAACG,8BAA8B,CACjDb,WAAW,CAACc,GAAG,CAACH,MAAM,IAAIA,MAAM,CAACL,OAAO,CAAC,EACzCP,QACF,CAAC;IACDJ,OAAO,EAAEQ;EACX,CAAC,CAAC;AACJ,CAAC;AAACN,EAAA,CAzBWD,sCAAsC;EAAA,QAC7BV,WAAW,EACdA,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}