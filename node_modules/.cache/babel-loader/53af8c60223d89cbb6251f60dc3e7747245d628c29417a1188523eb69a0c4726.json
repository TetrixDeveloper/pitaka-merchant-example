{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from \"@tanstack/react-query\";\nimport { verifyPin } from \"./services\";\nimport { setPitakaToken } from \"graphQLClient\";\nexport const useVerifyPinMutation = () => {\n  _s();\n  return useMutation({\n    mutationFn: pin => verifyPin(pin),\n    onSuccess: data => {\n      setPitakaToken(data.token);\n      localStorage.setItem(\"x-pitaka-token\", data.token);\n    }\n  });\n};\n_s(useVerifyPinMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["useMutation","verifyPin","setPitakaToken","useVerifyPinMutation","_s","mutationFn","pin","onSuccess","data","token","localStorage","setItem"],"sources":["C:/Users/iandev/Documents/GitHub/pitaka-merchant-example/src/features/auth/mutations.ts"],"sourcesContent":["import { useMutation } from \"@tanstack/react-query\";\r\nimport { verifyPin } from \"./services\";\r\nimport { setPitakaToken } from \"graphQLClient\";\r\n\r\nexport const useVerifyPinMutation = () => {\r\n  return useMutation({\r\n    mutationFn: (pin: string) => verifyPin(pin),\r\n    onSuccess: (data: { token: string; expiresAt: number }) => {\r\n      setPitakaToken(data.token);\r\n      localStorage.setItem(\"x-pitaka-token\", data.token);\r\n    },\r\n  });\r\n};\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,OAAOJ,WAAW,CAAC;IACjBK,UAAU,EAAGC,GAAW,IAAKL,SAAS,CAACK,GAAG,CAAC;IAC3CC,SAAS,EAAGC,IAA0C,IAAK;MACzDN,cAAc,CAACM,IAAI,CAACC,KAAK,CAAC;MAC1BC,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEH,IAAI,CAACC,KAAK,CAAC;IACpD;EACF,CAAC,CAAC;AACJ,CAAC;AAACL,EAAA,CARWD,oBAAoB;EAAA,QACxBH,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}